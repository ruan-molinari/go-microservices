basePath: /
consumes:
    - application/json
definitions:
    GenericError:
        description: GenericError is a generic error message returned by a server
        properties:
            message:
                type: string
                x-go-name: Message
        type: object
        x-go-package: github.com/ruan-molinari/go-microservices/handlers
    Product:
        description: Product defines the structure for an API product
        properties:
            description:
                description: The description of the product
                maxLength: 10000
                type: string
                x-go-name: Description
            id:
                description: The id for this product
                format: int64
                minimum: 1
                type: integer
                x-go-name: ID
            name:
                description: The name ot the product
                maximum: 255
                minimum: 3
                type: string
                x-go-name: Name
            price:
                description: The price of the product
                format: float
                minimum: 0.1
                type: number
                x-go-name: Price
            sku:
                description: The SKU for the product
                pattern: '[a-z]+-[a-z]+-[a-z]+'
                type: string
                x-go-name: SKU
        required:
            - id
            - name
            - price
            - sku
        type: object
        x-go-package: github.com/ruan-molinari/go-microservices/data
    ValidationError:
        description: ValidationError is a collection of validation error messages
        properties:
            messages:
                items:
                    type: string
                type: array
                x-go-name: Messages
        type: object
        x-go-package: github.com/ruan-molinari/go-microservices/handlers
info:
    description: '# Documentation for Product API'
    title: of Product API
    version: 0.1.0
paths:
    /product:
        post:
            description: Create a new product
            operationId: createProduct
            responses:
                "200":
                    $ref: '#/responses/productResponse'
                "422":
                    $ref: '#/responses/errorValidation'
                "501":
                    $ref: '#/responses/errorResponse'
            tags:
                - products
    /products:
        get:
            description: Returns a single product from the database
            operationId: listProduct
            responses:
                "200":
                    $ref: '#/responses/productsResponse'
                "404":
                    $ref: '#/responses/errorResponse'
            tags:
                - products
        put:
            description: Update a product's details
            operationId: updateProduct
            responses:
                "201":
                    $ref: '#/responses/noContentResponse'
                "404":
                    $ref: '#/responses/errorResponse'
                "422":
                    $ref: '#/responses/errorValidation'
            tags:
                - products
    /products/{id}:
        delete:
            description: Delete a product from the database
            operationId: deleteProduct
            parameters:
                - description: The id of the product to delete from database
                  format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
            responses:
                "201":
                    $ref: '#/responses/noContent'
                "404":
                    $ref: '#/responses/errorResponse'
                "501":
                    $ref: '#/responses/errorResponse'
            tags:
                - products
produces:
    - application/json
responses:
    errorResponse:
        description: Generic error message returned as string
        schema:
            $ref: '#/definitions/GenericError'
    errorValidation:
        description: Validation errors defined as an array of strings
        schema:
            $ref: '#/definitions/ValidationError'
    noContentResponse:
        description: No tontent is return by this API endpoint
    productResponse:
        description: A single product
        schema:
            $ref: '#/definitions/Product'
    productsResponse:
        description: A list of products
        schema:
            items:
                $ref: '#/definitions/Product'
            type: array
schemes:
    - http
swagger: "2.0"
